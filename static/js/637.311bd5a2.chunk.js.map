{"version":3,"file":"static/js/637.311bd5a2.chunk.js","mappings":"8MAoFA,EA/EqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,EAAe,SAAHC,GAAqC,IAADC,EAAAD,EAA9BE,OAAUb,EAAIY,EAAJZ,KAAMc,EAAKF,EAALE,MACtC,OAAQd,GACN,IAAK,OACH,OAAOC,EAAQa,GACjB,IAAK,QACH,OAAOT,EAASS,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,QACE,OAEN,EAUA,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBAEJD,EAAAA,EAAAA,MAAA,QAAMG,SAZW,SAAAC,GACnBA,EAAEC,iBACF1B,EAAS2B,EAAAA,EAAAA,SAAwB,CAAErB,KAAAA,EAAMI,MAAAA,EAAOI,SAAAA,KAChDP,EAAQ,IACRI,EAAS,IACTI,EAAY,GACd,EAMkCa,UAAU,0BAAyBN,SAAA,EAC/DD,EAAAA,EAAAA,MAAA,OAAKO,UAAU,qBAAoBN,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SAAOM,QAAQ,OAAOD,UAAU,sBAAqBN,SAAC,UAGtDC,EAAAA,EAAAA,KAAA,SACEO,KAAK,OACLxB,KAAK,OACLc,MAAOd,EACPyB,SAAUf,EACVY,UAAU,4BAIdP,EAAAA,EAAAA,MAAA,OAAKO,UAAU,qBAAoBN,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SAAOM,QAAQ,QAAQD,UAAU,sBAAqBN,SAAC,WAGvDC,EAAAA,EAAAA,KAAA,SACEO,KAAK,QACLxB,KAAK,QACLc,MAAOV,EACPqB,SAAUf,EACVY,UAAU,4BAIdP,EAAAA,EAAAA,MAAA,OAAKO,UAAU,qBAAoBN,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SAAOM,QAAQ,WAAWD,UAAU,sBAAqBN,SAAC,cAG1DC,EAAAA,EAAAA,KAAA,SACEO,KAAK,WACLxB,KAAK,WACLc,MAAON,EACPiB,SAAUf,EACVY,UAAU,4BAIdL,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAASF,UAAU,gBAAeN,SAAC,kBAMxD,C","sources":["pages/RegisterPage/RegisterPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../../redux/auth/auth-operations';\nimport './RegisterPage.scss';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Registration Page</h1>\n\n      <form onSubmit={handleSubmit} className=\"RegisterForm__container\">\n        <div className=\"RegisterForm_group\">\n          <label htmlFor=\"name\" className=\"RegisterForm__label\">\n            Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            className=\"RegisterForm__input\"\n          />\n        </div>\n\n        <div className=\"RegisterForm_group\">\n          <label htmlFor=\"email\" className=\"RegisterForm__label\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            className=\"RegisterForm__input\"\n          />\n        </div>\n\n        <div className=\"RegisterForm_group\">\n          <label htmlFor=\"password\" className=\"RegisterForm__label\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            className=\"RegisterForm__input\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"Register__btn\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n\n// import React from 'react';\n// import { useDispatch } from 'react-redux';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { authOperations } from '../../redux/auth';\n// import './RegisterPage.scss';\n\n// const RegisterPage = () => {\n//   const dispatch = useDispatch();\n\n//   const formik = useFormik({\n//     initialValues: {\n//       name: '',\n//       email: '',\n//       password: '',\n//     },\n//     validationSchema: Yup.object({\n//       name: Yup.string().required(\"Обов'язкове поле\"),\n//       email: Yup.string()\n//         .email('Невірний формат електронної пошти')\n//         .required(\"Обов'язкове поле\"),\n//       password: Yup.string().required(\"Обов'язкове поле\"),\n//     }),\n//     onSubmit: (values, { resetForm }) => {\n//       dispatch(authOperations.register(values));\n//       resetForm();\n//     },\n//   });\n\n//   return (\n//     <div>\n//       <h1>Registration Page</h1>\n\n//       <form onSubmit={formik.handleSubmit} className=\"register-form\">\n//         <div className=\"form-group\">\n//           <label htmlFor=\"name\" className=\"label\">\n//             Name\n//           </label>\n//           <input\n//             type=\"text\"\n//             id=\"name\"\n//             name=\"name\"\n//             className=\"input\"\n//             {...formik.getFieldProps('name')}\n//           />\n//           {formik.touched.name && formik.errors.name ? (\n//             <div className=\"error\">{formik.errors.name}</div>\n//           ) : null}\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\" className=\"label\">\n//             Email\n//           </label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             name=\"email\"\n//             className=\"input\"\n//             {...formik.getFieldProps('email')}\n//           />\n//           {formik.touched.email && formik.errors.email ? (\n//             <div className=\"error\">{formik.errors.email}</div>\n//           ) : null}\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"password\" className=\"label\">\n//             Password\n//           </label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             name=\"password\"\n//             className=\"input\"\n//             {...formik.getFieldProps('password')}\n//           />\n//           {formik.touched.password && formik.errors.password ? (\n//             <div className=\"error\">{formik.errors.password}</div>\n//           ) : null}\n//         </div>\n\n//         <button type=\"submit\" className=\"button\">\n//           Register\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default RegisterPage;\n"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleChange","_ref","_ref$target","target","value","_jsxs","children","_jsx","onSubmit","e","preventDefault","authOperations","className","htmlFor","type","onChange"],"sourceRoot":""}